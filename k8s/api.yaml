apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: dis
spec:
  ports:
  - port: 3000
  type: LoadBalancer
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: dis
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: api
        ports:
        - containerPort: 3000
        resources: {}
        env:
          - name: PGHOST
            value: postgresql-postgresql-ha-pgpool
          - name: PGUSER
            value: postgres
          - name: PGDATABASE
            value: postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-postgresql-ha-postgresql
                key: postgresql-password
          - name: DATABASE_URL
            value: "postgres://$(PGUSER):$(PGPASSWORD)@$(PGHOST)/$(PGDATABASE)"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: dis
  annotations:
    kubernetes.io/ingress.class: "public"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/http2-push-preload: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    nginx.ingress.kubernetes.io/proxy-pass-headers: "Location"

spec:
  tls:
  - hosts:
    - api.upphandling.app
    secretName: api-secret-tls
  rules:
  - host: api.upphandling.app
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: api
            port:
              number: 3000